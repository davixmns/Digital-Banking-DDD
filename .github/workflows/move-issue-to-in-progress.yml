name: Move Issue to In Progress on Branch Creation

on:
  create:  # Acionado quando uma branch ou tag é criada

jobs:
  move-issue:
    runs-on: ubuntu-latest
    if: github.event.ref_type == 'branch'  # Executa apenas para branches
    steps:
      - name: Extrair Número da Issue do Nome da Branch
        id: extract
        run: |
          BRANCH_NAME=${{ github.event.ref }}
          ISSUE_NUMBER=$(echo $BRANCH_NAME | grep -oE '[0-9]+')
          echo "ISSUE_NUMBER=$ISSUE_NUMBER" >> $GITHUB_ENV
      - name: Obter IDs do Projeto e da Coluna
        id: get-ids
        uses: actions/github-script@v7
        with:
          script: |
            const projects = await github.rest.projects.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            const project = projects.data.find(p => p.name === 'DigitalBankDDD');
            if (!project) throw new Error('Project Board not found');
            const columns = await github.rest.projects.listColumns({
              project_id: project.id
            });
            const inProgressColumn = columns.data.find(c => c.name === 'In Progress');
            if (!inProgressColumn) throw new Error('Column "In Progress" not found');
            core.setOutput('project_id', project.id);
            core.setOutput('column_id', inProgressColumn.id);
      - name: Mover Issue para In Progress
        if: env.ISSUE_NUMBER != ''
        uses: actions/github-script@v7
        with:
          script: |
            const issueNumber = process.env.ISSUE_NUMBER;
            const projectId = '${{ steps.get-ids.outputs.project_id }}';
            const columnId = '${{ steps.get-ids.outputs.column_id }}';
            const issue = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber
            });
            await github.rest.projects.createCard({
              column_id: columnId,
              content_id: issue.data.id,
              content_type: 'Issue'
            });
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}